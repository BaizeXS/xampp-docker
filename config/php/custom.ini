;==========================================
; PHP开发环境设置
;==========================================

; 允许使用 <? ?> 短标签语法 (如 <? echo $var ?>)
; 在老项目兼容性中很有用，但现代PHP项目推荐使用 <?php ?>
short_open_tag = On

; 控制是否向浏览器输出错误信息
; Off适合生产环境提高安全性，但开发环境建议设为On便于调试
display_errors = Off

;==========================================
; 资源限制与性能配置
;==========================================

; 单个PHP脚本可使用的最大内存量
; 256MB足够处理大多数Laravel应用，包括图片处理
memory_limit = 256M

; 允许上传的最大文件大小
; 64MB适合大多数文件上传需求，如图片、PDF等
upload_max_filesize = 64M

; 允许通过POST请求提交的最大数据大小
; 应当大于或等于upload_max_filesize以支持文件上传
post_max_size = 64M

; 脚本最大执行时间(秒)
; 300秒(5分钟)足够大多数复杂操作如数据导入
max_execution_time = 300

; 设置默认时区
; UTC推荐用于国际化应用，避免夏令时问题
date.timezone = UTC

;==========================================
; Laravel推荐的OPcache优化设置
;==========================================

; 启用OPcache，显著提升PHP执行速度
; 通过编译并缓存PHP字节码减少解析时间
opcache.enable=1

; 在命令行也启用OPcache
; 对Artisan命令和调度任务有性能提升
opcache.enable_cli=1

; OPcache可使用的内存大小(MB)
; 128MB足够缓存大多数中型应用的所有脚本
opcache.memory_consumption=128

; 用于字符串的共享内存大小(MB)
; 减少重复字符串的内存占用
opcache.interned_strings_buffer=8

; 缓存的最大文件数量
; 4000适合大多数复杂Laravel应用
opcache.max_accelerated_files=4000

; 检查文件更新频率(秒)
; 60秒在开发环境中提供良好的缓存更新平衡
opcache.revalidate_freq=60

; 加速关闭进程
; 提高请求完成速度
opcache.fast_shutdown=1
